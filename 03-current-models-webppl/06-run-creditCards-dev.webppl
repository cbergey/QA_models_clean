//  -------------------
// | global parameters |
//  -------------------

var params = {
  policyAlpha     : 2.5,    // SM-alpha for action policy
  questionerAlpha : 4,      // SM-alpha for question choice
  R1Alpha         : 3,      // SM-alpha for R1
  relevanceBetaR0 : 0,      // beta=1 for only action-utility
  relevanceBetaR1 : 0.95,   //
  costWeight      : 0.5,
  questionCost    : 0.25    // cost for a question (relative to no question)
};


//  ------------------
// | test CC example |
//  ------------------


// var context = CCC_loPri_AE ;
// console.log('context: \t', context.name);

// var worlds = context.worlds;
// console.log('worlds: \t', worlds);

// var question = context.questions[6];
// console.log('question: \t', question.text)

// var world = 'AE+MC';
// console.log('world: \t\t', world);

// var responsesR0 = context.getLicensedResponsesR0
// console.log('R0 resp. set: \t', responsesR0(question))

// var responseR0 = responsesR0(question)[0]
// console.log('response R0: \t', responseR0)

// var meaning = context.meaning
// console.log('truth R0 r.: \t', meaning(world,question,responseR0));

// var responsesR1 = context.getLicensedResponsesR1
// console.log('R1 resp. set \t: ', responsesR1(question))


// var responseR1 = responsesR1(question)[0]
// console.log('response R1: \t', responseR1)

// var meaning = context.meaning
// console.log('truth R1 r.: \t', meaning(world,question,responseR1));

// var R0_test = R0(question, context, params)

// console.log("R0:")
// terminalViz(R0_test, 4)

// var Q1_test = Q1(context, params)
// console.log("Q1:")
// terminalViz(Q1_test, 4)

// var R0Ext_test = R1ContextFree(question, context, params)
// console.log("R0 (extended):")
// terminalViz(R0Ext_test, 4)

// ---------------------------------------------
// testing R1 with full knowledge of preferences
// ---------------------------------------------

// console.log("---------------------------------------------\n",
//             "Testing R1 with full knowledge of credit card\n",
//             "---------------------------------------------\n")

// R1 knows full context model
// var R1Prior_FullKnowledge = {
//   trueWorld: context,
//   distribution: Categorical({vs: ["trueWorld"]})
// }

// var R1posterior = R1ContextPosterior(context, question, R1Prior_FullKnowledge, params);
// console.log("Posterior inference (trivial)")
// terminalViz(marginalize(R1posterior, 'label'),4)


// var R1Prediction = R1Averager(context, R1Prior_FullKnowledge, question, params)
// console.log("R1-Averager (full knowledge):")
// terminalViz(R1Prediction)

// ---------------------------------------------
// testing R1 with uncertainty about preferences
// ---------------------------------------------



// CASE 1 -------------------------------------

var question_1 = creditCardContext.questions[6];

console.log(" ---------------------------------------------------------\n",
            "        Case 1 (highPrior: AE and MC available)    \n",
            "---------------------------------------------------------\n")

console.log('question: \t', question_1.text)

var R1posterior = R1ContextPosterior(creditCardContext, question_1, R1Prior_Uncertainty_highPior, params);
console.log("Posterior beliefs about which CC Questioner has:")
terminalViz(marginalize(R1posterior, 'label'),4)

var R1Prediction = R1Averager(creditCardContext, R1Prior_Uncertainty_highPior, question_1, params)
console.log("Probability of answers:")
terminalViz(R1Prediction,4)

console.log("\n")

console.log(" ---------------------------------------------------------\n",
            "        Case 1 (lowPrior: MC and CB available)    \n",
            "---------------------------------------------------------\n")

console.log('question: \t', question_1.text)

var R1posterior = R1ContextPosterior(CCC_loPri_AE, question_1, R1Prior_Uncertainty_lowPior, params);
console.log("Posterior beliefs about which CC Questioner has:")
terminalViz(marginalize(R1posterior, 'label'),4)

var R1Prediction = R1Averager(CCC_loPri_AE, R1Prior_Uncertainty_lowPior, question_1, params)
console.log("Probability of answers:")
terminalViz(R1Prediction,4)

console.log("\n")


// CASE 2 -------------------------------------

console.log(" ---------------------------------------------------------\n",
            "        Case 2 (highPrior: AE and MC available)    \n",
            "---------------------------------------------------------\n")

var question_2 = creditCardContext.questions[1];

console.log('question: \t', question_2.text)

var R1posterior = R1ContextPosterior(creditCardContext, question_2, R1Prior_Uncertainty_highPior, params);
console.log("Posterior beliefs about which CC Questioner has:")
terminalViz(marginalize(R1posterior, 'label'),4)

var R1Prediction = R1Averager(creditCardContext, R1Prior_Uncertainty_highPior, question_2, params)
console.log("Probability of answers:")
terminalViz(R1Prediction,4)



console.log("\n")

console.log(" ---------------------------------------------------------\n",
            "        Case 2 (lowPrior: MC and CB available)    \n",
            "---------------------------------------------------------\n")

console.log('question: \t', question_2.text)

var R1posterior = R1ContextPosterior(CCC_loPri_AE, question_2, R1Prior_Uncertainty_lowPior, params);
console.log("Posterior beliefs about which CC Questioner has:")
terminalViz(marginalize(R1posterior, 'label'),4)

var R1Prediction = R1Averager(CCC_loPri_AE, R1Prior_Uncertainty_lowPior, question_2, params)
console.log("Probability of answers:")
terminalViz(R1Prediction,4)

console.log("\n")


// CASE 3 -------------------------------------

console.log(" ---------------------------------------------------------\n",
            "        Case 3 (medPrior: AE and CB available)    \n",
            "---------------------------------------------------------\n")

var question_3 = creditCardContext.questions[1];

console.log('question: \t', question_3.text)

var R1posterior = R1ContextPosterior(CCC_medPri_MC, question_3, R1Prior_Uncertainty_medPior, params);
console.log("Posterior beliefs about which CC Questioner has:")
terminalViz(marginalize(R1posterior, 'label'),4)

var R1Prediction = R1Averager(CCC_medPri_MC, R1Prior_Uncertainty_medPior, question_3, params)
console.log("Probability of answers:")
terminalViz(R1Prediction,4)
